/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package io.github.beohoang98.chat_ui.form;

import com.formdev.flatlaf.FlatDarculaLaf;
import com.google.common.eventbus.Subscribe;
import io.github.beohoang98.chat_ui.App;
import io.github.beohoang98.chat_ui.events.ErrorEvent;
import io.github.beohoang98.chat_ui.events.SwitchAuthPageEvent;
import io.github.beohoang98.chat_ui.models.AuthModel;
import io.github.beohoang98.chat_ui.services.SocketService;
import java.io.IOException;
import java.net.InetAddress;
import java.net.URL;
import java.net.UnknownHostException;
import javax.swing.ImageIcon;
import javax.swing.SwingWorker;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import jiconfont.icons.google_material_design_icons.GoogleMaterialDesignIcons;
import jiconfont.swing.IconFontSwing;

/**
 *
 * @author noobcoder
 */
public class Auth extends javax.swing.JFrame {

    /**
     * Creates new form Auth
     */
    public Auth() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        form = new javax.swing.JPanel();
        usernameLabel = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        passLabel = new javax.swing.JLabel();
        loginBtn = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();
        hostLabel = new javax.swing.JLabel();
        hostField = new javax.swing.JTextField();
        portField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        registerSwitchBtn = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        form.setPreferredSize(new java.awt.Dimension(400, 350));
        java.awt.GridBagLayout formLayout = new java.awt.GridBagLayout();
        formLayout.columnWeights = new double[] {1,1,1};
        formLayout.rowWeights = new double[] {1, 1, 1};
        form.setLayout(formLayout);

        usernameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        usernameLabel.setIcon(IconFontSwing.buildIcon(GoogleMaterialDesignIcons.PEOPLE, 24));
        usernameLabel.setLabelFor(usernameField);
        usernameLabel.setText("Username");
        usernameLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        form.add(usernameLabel, gridBagConstraints);

        usernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        form.add(usernameField, gridBagConstraints);

        passLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        passLabel.setIcon(IconFontSwing.buildIcon(GoogleMaterialDesignIcons.LOCK, 24)
        );
        passLabel.setLabelFor(passwordField);
        passLabel.setText("Password");
        passLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        form.add(passLabel, gridBagConstraints);

        loginBtn.setText("Login");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 0, 0);
        form.add(loginBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        form.add(passwordField, gridBagConstraints);

        hostLabel.setText("Host");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        form.add(hostLabel, gridBagConstraints);

        hostField.setText("localhost");
        hostField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hostFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        form.add(hostField, gridBagConstraints);

        portField.setText("8080");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        form.add(portField, gridBagConstraints);

        jLabel1.setText("Port");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        form.add(jLabel1, gridBagConstraints);

        registerSwitchBtn.setBackground(new java.awt.Color(125, 125, 125));
        registerSwitchBtn.setText("Don't have account? Register");
        registerSwitchBtn.setBorderPainted(false);
        registerSwitchBtn.setContentAreaFilled(false);
        registerSwitchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        registerSwitchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerSwitchBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        form.add(registerSwitchBtn, gridBagConstraints);

        getContentPane().add(form, new java.awt.GridBagConstraints());

        errorLabel.setForeground(javax.swing.UIManager.getDefaults().getColor("nb.errorForeground"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        getContentPane().add(errorLabel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameFieldActionPerformed

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        setSubmitting(true);
        SwingWorker worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                showError("");
                try {
                    String username = usernameField.getText();
                    String password = new String(passwordField.getPassword());
                    InetAddress host = InetAddress.getByName(hostField.getText());
                    int port = Integer.parseInt(portField.getText());
                    AuthModel model = new AuthModel(username, password);

                    SocketService.instance.open(host, port);
                    SocketService.instance.send("LOGIN", model);
                } catch (NumberFormatException e) {
                    showError("Port must be number: " + portField.getText());
                } catch (UnknownHostException e) {
                    showError("Host is unknown or wrong format: " + hostField.getText());
                } catch (IOException e) {
                    showError(e);
                }
                return null;
            }
        };
        worker.execute();
    }//GEN-LAST:event_loginBtnActionPerformed

    public void setSubmitting(boolean isSubmit) {
        URL iconUrl = getClass().getClassLoader().getResource("spin-26px.gif");
        loginBtn.setEnabled(!isSubmit);
        loginBtn.setIcon(isSubmit ? new ImageIcon(iconUrl) : null);
    }

    private void hostFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hostFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hostFieldActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        App.eventBus.register(this);
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        App.eventBus.unregister(this);
    }//GEN-LAST:event_formWindowClosed

    private void registerSwitchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerSwitchBtnActionPerformed
        App.eventBus.post(new SwitchAuthPageEvent(false));
    }//GEN-LAST:event_registerSwitchBtnActionPerformed

    void showError(Throwable e) {
        this.showError(e.getMessage());
    }

    void showError(String errorTxt) {
        this.setSubmitting(false);
        errorLabel.setText(errorTxt);
    }

    @Subscribe
    void showError(ErrorEvent ev) {
        this.showError(ev.getError());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        IconFontSwing.register(GoogleMaterialDesignIcons.getIconFont());
        try {
            UIManager.setLookAndFeel(new FlatDarculaLaf());
        } catch (UnsupportedLookAndFeelException e) {
            e.printStackTrace();
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Auth().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel errorLabel;
    private javax.swing.JPanel form;
    private javax.swing.JTextField hostField;
    private javax.swing.JLabel hostLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton loginBtn;
    private javax.swing.JLabel passLabel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField portField;
    private javax.swing.JButton registerSwitchBtn;
    private javax.swing.JTextField usernameField;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
